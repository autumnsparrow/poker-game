game-websockets 工程配置:

1.将game-websockets工程导入sts.
2.点击右键显示-->maven-->update project


3.game-context 打包
	3.1 检查 src/main/resources/META-INF/spring/release-game-context.properties,
		3.1.1 线上通过http配置方式,配置ice配置文件索引文件地址,检查http服务器上配置文件.
		3.1.2 线上通过META-INF本地jar资源,检查src/main/resource/META-INF/ice/release文件夹内配置.
	3.2 点击右键显示-->run as -> maven-build ... -->   选中 "Skip Test".  输入: mvn clean install

4.game-service 打包
	4.1 检查src/main/resources/META-INF/spring/applicationContext-game-service.xml,
	<!-- <context:property-placeholder
		location="classpath*:/META-INF/spring/release-*.properties" /> -->
	 <context:property-placeholder
		location="classpath*:/META-INF/spring/debug-*.properties" /> 
		修改成
		<context:property-placeholder
		location="classpath*:/META-INF/spring/release-*.properties" /> 
	 <!-- <context:property-placeholder
		location="classpath*:/META-INF/spring/debug-*.properties" /> -->
		用于读取realese-*.properties,包括 
			game-context-0.0.1-SNAPSHOT.jar!/META-INF/spring/release-game-context.properties  (用于ice配置)
			game-service-0.0.1-SNAPSHOT.jar!/META-INF/spring/release-database-service.properties.(用于数据库配置)
	4.2 点击右键显示-->run as -> maven-build ... -->   选中 "Skip Test".  输入: mvn clean install
	
	
5 game-internal-service打包:
	
	5.1 点击右键显示-->run as -> maven-build ... -->   选中 "Skip Test".  输入: mvn clean install
	

6. game-protocol打包:
	6.1 检查src/main/resources/META-INF/game-context.conf.将需要websocket连接的协议beans及handle加入到扫描目录中.
		设置serviceName变量,同ice配置文件及文件中服务名称保持一致.
	6.2 点击右键显示-->run as -> maven-build ... -->   选中 "Skip Test".  输入: mvn clean install
	
	6.3 进入target/generated-resources/appassembler/jsw,将game-protocol文件夹打包成zip上传到部署服务器.
	
	6.4 线上将game-protocol.zip解压,并在上下创建logs目录.
	
	6.5 修改game-protocol/etc/wrapper.conf文件,限制日志文件大小及数量,修改jvm启动参数.
	
	6.6 进入game-protocol/bin,执行chmod +x *命令.
	
	6.7 使用./game-protocol console 启动程序,检查启动是否有问题.无问题使用 ./game-protocol start启动服务.
	
	
7. game-poker-ai打包:
	7.1 点击右键显示-->run as -> maven-build ... -->   选中 "Skip Test".  输入: mvn clean install
	
8 game-landlord打包:
		8.1 检查src/main/resources/META-INF/game-context.conf.将landlord连接的协议beans及handle加入到扫描目录中.
		设置serviceName变量,同ice配置文件及文件中服务名称保持一致.
		8.2 检查src/main/resources/META-INF/spring/release-game-landlord.properties.
			配置正确jmx地址及用户密码文件,用户权限文件位置.
			jmx.password.file:(用户名:密码)
				文件内容
				admin:admin 
			jmx.access.file(用户名:权限[read,write,readwrite]) 
				admin:readwrite
		8.3 检查src/main/resources/META-INF/game-landlord.conf.
			修改游戏服务器中配置地址.
		上线打包及部署如 [6.2 至6.7]操作.


注意:
	在目前工程使用spring properties文件说明工程所使用的一些配置文件的地址,地址包括两类:
	本地jar资源  以  /META-INF/ ... 开头.
	web服务器资源 以 http://.... 开头
	可以通过properties设置配置所选择的方式,即本地或web.
	
	使用spring properties文件时,通过修改applicationContext-*.xml中
	配置如本地调试:
	<context:property-placeholder
		location="classpath*:/META-INF/spring/debug-*.properties" /> 
	配置如线上发布:	
	<context:property-placeholder
		location="classpath*:/META-INF/spring/release-*.properties" /> 


9.game-websockets 点击右键显示-->properties-->Deployment assembly-->add-->Java build path-->Maven Dependencies.


10.点击右键,到表明war包.(因为目前pom没有支持tomcat8.0的plugin使用mvn install无法打包.

