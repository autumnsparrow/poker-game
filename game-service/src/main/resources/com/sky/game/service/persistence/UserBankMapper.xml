<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.game.service.persistence.UserBankMapper">
  <resultMap id="BaseResultMap" type="com.sky.game.service.domain.UserBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_account_id" jdbcType="BIGINT" property="userAccountId" />
    <result column="loan_date" jdbcType="TIMESTAMP" property="loanDate" />
    <result column="refund_date" jdbcType="TIMESTAMP" property="refundDate" />
    <result column="deposit" jdbcType="INTEGER" property="deposit" />
    <result column="loan" jdbcType="INTEGER" property="loan" />
    <result column="bank_pw" jdbcType="VARCHAR" property="bankPw" />
    <result column="repayment" jdbcType="INTEGER" property="repayment" />
    <result column="icon_id" jdbcType="BIGINT" property="iconId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_account_id, loan_date, refund_date, deposit, loan, bank_pw, repayment, icon_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_bank
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.sky.game.service.domain.UserBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_bank (id, user_account_id, loan_date, 
      refund_date, deposit, loan, 
      bank_pw, repayment, icon_id
      )
    values (#{id,jdbcType=BIGINT}, #{userAccountId,jdbcType=BIGINT}, #{loanDate,jdbcType=TIMESTAMP}, 
      #{refundDate,jdbcType=TIMESTAMP}, #{deposit,jdbcType=INTEGER}, #{loan,jdbcType=INTEGER}, 
      #{bankPw,jdbcType=VARCHAR}, #{repayment,jdbcType=INTEGER}, #{iconId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sky.game.service.domain.UserBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userAccountId != null">
        user_account_id,
      </if>
      <if test="loanDate != null">
        loan_date,
      </if>
      <if test="refundDate != null">
        refund_date,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="loan != null">
        loan,
      </if>
      <if test="bankPw != null">
        bank_pw,
      </if>
      <if test="repayment != null">
        repayment,
      </if>
      <if test="iconId != null">
        icon_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userAccountId != null">
        #{userAccountId,jdbcType=BIGINT},
      </if>
      <if test="loanDate != null">
        #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundDate != null">
        #{refundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=INTEGER},
      </if>
      <if test="loan != null">
        #{loan,jdbcType=INTEGER},
      </if>
      <if test="bankPw != null">
        #{bankPw,jdbcType=VARCHAR},
      </if>
      <if test="repayment != null">
        #{repayment,jdbcType=INTEGER},
      </if>
      <if test="iconId != null">
        #{iconId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sky.game.service.domain.UserBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_bank
    <set>
      <if test="userAccountId != null">
        user_account_id = #{userAccountId,jdbcType=BIGINT},
      </if>
      <if test="loanDate != null">
        loan_date = #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundDate != null">
        refund_date = #{refundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=INTEGER},
      </if>
      <if test="loan != null">
        loan = #{loan,jdbcType=INTEGER},
      </if>
      <if test="bankPw != null">
        bank_pw = #{bankPw,jdbcType=VARCHAR},
      </if>
      <if test="repayment != null">
        repayment = #{repayment,jdbcType=INTEGER},
      </if>
      <if test="iconId != null">
        icon_id = #{iconId,jdbcType=BIGINT},
      </if>
    </set>
    where user_account_id = #{userAccountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sky.game.service.domain.UserBank">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_bank
    set user_account_id = #{userAccountId,jdbcType=BIGINT},
      loan_date = #{loanDate,jdbcType=TIMESTAMP},
      refund_date = #{refundDate,jdbcType=TIMESTAMP},
      deposit = #{deposit,jdbcType=INTEGER},
      loan = #{loan,jdbcType=INTEGER},
      bank_pw = #{bankPw,jdbcType=VARCHAR},
      repayment = #{repayment,jdbcType=INTEGER},
      icon_id = #{iconId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateDeposit" parameterType="hashmap">
  update user_bank set deposit=deposit+#{saveMoney} where user_account_id=#{userId}; 
  </update>
  <select id="selectUserId" parameterType="long">
  select user_account_id from user_bank where user_account_id=#{userId};
  </select>
  <insert id="insertDeposit" parameterType="hashmap">
  insert into user_bank (user_account_id,deposit)values(#{userId},#{saveMoney});
  </insert>
  <update id="takeDeposit" parameterType="hashmap">
  update user_bank set deposit=deposit-#{value} where user_account_id=#{userId};
  </update>
  
  <select id="selectBankPw" parameterType="long" resultType="String">
  select bank_pw bankPw from user_bank where user_account_id=#{userId};
  </select>
  <select id="selectUserLoan" parameterType="long" resultType="int">
  select loan from user_bank where user_account_id=#{userId};
  </select>
  <select id="selectUserRepayment" parameterType="long" resultType="int">
  select repayment from user_bank where user_account_id=#{userId};
  </select>
  <update id="updateUserLoan" parameterType="hashmap">
  update user_bank set loan=loan+#{lend} where user_account_id=#{userId};
  </update>
  
  <insert id="insertUserLoan" parameterType="hashmap">
   insert into user_bank (user_account_id,loan,loan_date)values(#{userId},#{lend},#{loanDate});
  </insert>
  <select id="selectLoanDate" parameterType="long">
  select loan_date from user_bank where user_account_id=#{userId};
  </select>
  <update id="updateRepayment" parameterType="hashmap">
  update user_bank set repayment=repayment+#{count} where user_account_id=#{userId};
  </update>
  <update id="updateBackLoan" parameterType="hashmap">
  update user_bank set loan=loan-#{count} where user_account_id=#{userId};
  </update>
  <select id="selectRefundDate" parameterType="long">
  select refund_date from user_bank where user_account_id=#{userId};
  </select>
  
  <select id="selectUserdDeposit" parameterType="long">
  select deposit from user_bank where user_account_id=#{userId};
  </select>
 <!--  根据用户id查询用户银行信息 -->
 <select id="selectUserBankByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
     select * from user_bank where user_account_id=#{userId}
  </select> 
  
  <update id="updateUserLoanStart" parameterType="hashmap">
   update user_bank set loan=loan+#{lend},loan_date=#{loanDate},refund_date=#{refundDate} where user_account_id=#{userId};
  </update>
   <!-- 插入个人银行信息  -->
  <insert id="insertBankPw" parameterType="hashmap">
  insert into user_bank values(null,#{userId},now(),now(),0,0,#{bankPw},0,null);
  </insert>
  <update id="reset" parameterType="long">
 	update user_bank set loan=0,repayment=0 where user_account_id=#{userId};
  </update>
  <update id="decReputationValue" parameterType="hashmap">
  	update user_extra set property_value=property_value+#{value} where user_account_id=10145 and property_id=28;
  </update>
  
</mapper>