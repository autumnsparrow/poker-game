package com.sky.game.service.persistence;


import java.util.HashMap;
import java.util.List;

import com.sky.game.service.domain.MyGood;
import com.sky.game.service.domain.MyPrice;
import com.sky.game.service.domain.TuPianId;
import com.sky.game.service.domain.UserItems;
public interface UserItemsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    int insert(UserItems record);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    int insertUserItems(HashMap<String,Object> map);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    int insertSelective(UserItems record);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    int insertReditUser(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    UserItems selectByPrimaryKey(Long id);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    List<UserItems> selectUserItems(HashMap<String,Object> map);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserItems record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(UserItems record);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_items
     *
     * @mbggenerated
     */
     void updateUserGoods(HashMap<String,Object> map);

     /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table user_items
      *
      * @mbggenerated
      */
     void decUserGolds(HashMap<String,Object> map);
   
     
     /**
      * 
      *金币兑换元宝减少
      */
     void decUserGoldingot(HashMap<String,Object> map);
     /**
      * 
      * 金币兑换金币增加
      */
     void updateUserGolds(HashMap<String,Object> map);
     /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table user_items
      *
      * @mbggenerated
      */
     void updateUsergm(HashMap<String,Object> map);

     /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table user_items
      *
      * @mbggenerated
      */
     List<MyPrice> selectMyPrices(Long userId);
     
     /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table user_items
      *
      * @mbggenerated
      */
     List<MyGood> selectMyGood(long id);
    
     /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table user_items
      *
      * @mbggenerated
      */
     void userPriceDes(long id);
     /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table user_items
      *
      * @mbggenerated
      */
     long selectItemValue(HashMap<String,Object> map);
     /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table user_items
      *
      * @mbggenerated
      */
     long selectTotalCount(long id);
     
     int selectPlayerCoin(long userId);

     
     
	/*
	 * 用户头像插入
	 */
     int insertUserHead(HashMap<String,Object> hashmap);
     
     String selectDescriptById(long itemId);
     
     int updateUserCoinNum(HashMap<String ,Object> hashmap);
     //拍买行用
     int updateUserDimNum(HashMap<String ,Object> hashmap);
     int updateUserSysNum(HashMap<String ,Object> hashmap);
	/*
	 * 封装一个图片id类用于。确定图片是一否购买
	 * 
	 */
     List<TuPianId> selectTPI(long userId);
     /*
      * 拍卖
      */
     int updateOwnerCoin(HashMap<String,Object> hashmap);
     int updateOwnerSys(HashMap<String,Object> hashmap);
     int updateOwnerDim(HashMap<String,Object> hashmap);
     
     void updateUserCoin(HashMap<String,Object> map);
     
     void decDeposit(HashMap<String,Object> map);
     /*
      * 修改用户金币 （增加）
      */
     void updateUserGold(HashMap<String,Object> map);
     
     void insertUserGold(HashMap<String,Object> map);
     
    /* void insertGiftGold(HashMap<String,Object> map);*/
     
     void updateGiftGold(HashMap<String,Object> map);
     
     UserItems selectByUserId(long userId);
     
     void insertLottery(HashMap<String,Object> map);
     
     void updateLottery(HashMap<String,Object> map);
     /*
      * 查询用户的元宝数
      */
     
     UserItems selectUserGold(long userId);
     /*
      * 查询用户兑换的物品数
      */
     
     UserItems selectUserExchangeItem(HashMap<String,Object> hashmap);
     
     UserItems selectUserCoin(long userId);

     /**
      * find all useritems.
      * @param userId
      * @return
      */
     List<UserItems> selectUserItemsByUserId(long userId);
     
     /**
      * change item value
      * 
      * item_value=#{value}
      * user_id=#{userId}
      * item_id=${itemId}
      * 
      * @param map
      * @return
      */
     int updateUserItem(HashMap<String,Object> map);
     /**
      * 
      * 拍买行 修改个人物品  add
      */
     
     int updateAddUserItem(HashMap<String,Object> map);
     
     List<Integer> selectGoldValue(HashMap<String,Object> map);
     
     List<Integer> selectCoinValue(HashMap<String,Object> map);
     
     UserItems selectUserItemByItemId(HashMap<String,Object> map);
     
     List<UserItems> selectGoldboard(HashMap<String,Object> map);
     
     List<UserItems> selectCoinboard(HashMap<String,Object> map);
     
     List<UserItems> selectExpboald();
     
     void addDeposit(HashMap<String,Object> map); 
     UserItems selectUserItemByUserIdAndItemId(Long userId,Long itemId);
     
     void insertUserCoin(HashMap<String,Object> map);
     
     void insertUserCoin1(HashMap<String,Object> map);
     
     void decUserCoin(HashMap<String,Object> map);
     /**
      * 积分卡合成插入背包
      */
     int insertIntoPoint(HashMap<String,Object> hashmap);
     /**
      * 积分卡合成删除用户背包中的积分卡
      */
    int deleteUserPointCard(HashMap<String,Object> hashmap);
    /**
     * 修改背包内积分卡
     * @param hashmap
     * @return
     */
    int updateUserBagPointCard(HashMap<String,Object> hashmap);
    /**
     * 个人头像保存
     */
    UserItems selectByUrl(HashMap<String,Object> hashmap);
    
    /**
     * 添加电话卡
     */
    void insertTelCard(HashMap<String,Object> map);
    
    UserItems selectBeryl(long userId);
    
    void decUserCoins(HashMap<String,Object> map);
    void updateActivity1(long userId);
    void insertActivity2(long userId);
    void insertActivity3(long userId);
    void insertActivity4(long userId);
    void insertActivity5(long userId);
    void insertActivity6(long userId);
    void insertActivity7(long userId);
    UserItems selectActivity2(long userId);
    UserItems selectActivity3(long userId);
    UserItems selectActivity4(long userId);
    UserItems selectActivity5(long userId);
    UserItems selectActivity6(long userId);
    UserItems selectActivity7(long userId);
    void updateActivity2(long userId);
    void updateActivity3(long userId);
    void updateActivity4(long userId);
    void updateActivity5(long userId);
    void updateActivity6(long userId);
    void updateActivity7(long userId);
    void updateRewardItem(HashMap<String,Object> map);
    void insertRewardItem(HashMap<String,Object> map);
    
    UserItems selectByItemsId(HashMap<String,Object> map);
    
}